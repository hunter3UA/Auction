@model Auction.BLL.ViewModels.IndexViewModel
@using Auction.BLL.ViewModels;
@using Auction.API.Helpers
@using Newtonsoft.Json;
@{

    CategoriesModel categories = ViewData["Categories"] as CategoriesModel;

}

<div class="flex-container">
    <div class="flex-item-row filters-item">



        <label> Фільтри:</label>
        <div class="flex-container flex-item-col">
            @using (Html.BeginForm("Index", "Home", FormMethod.Get))
            {
                <div class="flex-item-row">
                    Категорія:

                    @foreach (var item in categories.Categories)
                    {
                        <p>
                            @item.CategoryName <input type="checkbox" id="@item.CategoryId" name="Categories" value="@item.CategoryName"

                            

                        </p>
                    }
                </div>
                <div class="flex-item-row">

                    <input type="submit" value="Enter" class="btn btn-info" />

                </div>

            }




            @Html.ActionLink("Скинути фільтри", "Index", "Home", new { page = 1, Filters="" }, null)

        </div>

    </div>








    <div class="flex-item-row">
        <div class="flex-container flex-item-col">
            @*Заменить слайдер на свой*@
            <div class="flex-item-row">
                <div id="carousel-example-generic" class="carousel slide" data-ride="carousel style="height:300px">
                    <!-- Indicators -->
                    <ol class="carousel-indicators">
                        <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                        <li data-target="#carousel-example-generic" data-slide-to="1"></li>
                        <li data-target="#carousel-example-generic" data-slide-to="2"></li>
                    </ol>

                    <!-- Wrapper for slides -->
                    <div class="carousel-inner">
                        <div class="item active" style="height:300px;">
                            <img src="~/Content/img/Internet-Shopping.jpg" height="300px;">
                            <div class="carousel-caption">
                                <h3>Caption Text</h3>
                            </div>
                        </div>
                        <div class="item" style="height:300px;">
                            <img src="~/Content/img/Internet-Shopping.jpg" height="300px;">
                            <div class="carousel-caption">
                                <h3>Caption Text</h3>
                            </div>
                        </div>
                        <div class="item" style="height:300px;">
                            <img src="~/Content/img/Internet-Shopping.jpg" height="300px;">
                            <div class="carousel-caption">
                                <h3>Caption Text</h3>
                            </div>
                        </div>
                    </div>

                    <!-- Controls -->
                    <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                    </a>
                    <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right"></span>
                    </a>
                </div> <!-- Carousel -->
            </div>
            <div class="flex-item-row">
                @*Убрать гавнокод*@
                @foreach (var item in Model.Lots)
                {
                    string path = string.Empty;
                    var obj = item.Pictures.Where(p => p.IsTittle).FirstOrDefault();
                    path = Path.GetFileNameWithoutExtension("") + "_" + "search" + Path.GetExtension("");
                    if (obj != null)
                    {

                        path = obj.LotId + "/" + Path.GetFileNameWithoutExtension(obj.Name) + "_" + "search" + Path.GetExtension(obj.Name);
                    }
                    @item.LotName<div id="lotItem" class="flex-container">
                        <div class="flex-item-row">
                            <img src="~/Pictures/@path" />
                        </div>
                        <div class="flex-item-row">
                           



                         

                        </div>
                    </div>
                }
            </div>
        </div>



    </div>
</div>
<br />

<div class="btn-group">
    @for(int i = 1; i <= Model.PageInfo.TotalPages;i++)
    {
        var str = JsonConvert.SerializeObject(Model.FiltersModel);
        @Html.ActionLink($"{i}", "Index", "Home", new { page = i, Filters=str },null);
    }
</div>